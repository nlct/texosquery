1.3 (2017/03/31):

 * If 'openin_any' hasn't been set, the fallback value for
   texosquery.jar and texosquery-jre5.jar is now 'a'
   (instead of 'p'). Fallback value for texosquery-jre8.jar
   is still 'p'.

  * Fixed spaces in path issue for the Windows .bat files.
    (https://github.com/nlct/texosquery/issues/2)

1.2.1 (2017/03/28):

 * Minor bug fix in texosquery.tex (fixed decimal separator
   for numeric patterns with all # in the fractional part)

1.2 (2017/03/23):

 * Now has three .jar files depending on the Java installation:

   - texosquery-jre8.jar

     Full application. May be used with the CLDR locale provider
     (Unicode Consortium's Common Locale Data Repository).
     Requires at least Java 8 (use with
     java -Djava.locale.providers=CLDR,JRE or
     add "java.locale.providers=CLDR,JRE" to the 
     JAVA_TOOLS_OPTIONS environment variable to access the CLDR)

   - texosquery.jar

     The default version of the application. Can't be used with
     CLDR. Less locale support. Requires at least Java 7.

   - texosquery-jre5.jar

     Cut-down version of the application with significantly less
     locale support. Provided for old systems that can't upgrade,
     but not recommended. (Use of Java 5 or 6 is deprecated.)
     Requires at least Java 5.

  * Corresponding scripts that run the appropriate .jar file
    are bundled in texosquery.dtx and extracted using:

    tex texosquery.ins

    - Unix-like (run `chmod +x texosquery*.sh`): 

      texosquery-jre8.sh : runs texosquery-jre8.jar with
      -Djava.locale.providers=CLDR,JRE

      texosquery.sh : runs texosquery.jar

      texosquery-jre5.sh : runs texosquery-jre5.jar

     (I recommend the removal of the '.sh' extension
      for more convenient invocation.)

    - Windows (rename texosquery*.batch to texosquery*.bat):

      texosquery-jre8.bat : runs texosquery-jre8.jar with
      -Djava.locale.providers=CLDR,JRE

      texosquery.bat : runs texosquery.jar

      texosquery-jre5.bat : runs texosquery-jre5.jar

    You can edit these files if additional Java settings
    are required (e.g. -Dfile.encoding=UTF-8). Alternatively
    set the JAVA_TOOLS_OPTIONS environment variable.

  * New texosquery.cfg configuration file. Edit the definition
    of \TeXOSInvokerName to indicate which application you
    need to use. For example, if Java 8 is installed:

    \def\TeXOSInvokerName{texosquery-jre8}

  See the installation section of the manual.

  * New command line switches:

  Actions:

  --bcp47 / -b
  --codeset-lcs / -C
  --locale-data / -D 
  --numeric / -N 
  --date-time / -M
  --time-zones / -Z
  --list-dir / -ld
  --list-regular / -lr
  --filterlist-dir / -fd
  --filterlist-regular / -fr
  --walk / -w

  Options:

  --debug [⟨n⟩]
  --nodebug
  --compatible ⟨n⟩ / -compat ⟨n⟩

  * Actions --list (-i) and --filterlist (-f) now have an
    optional argument to indicate the sort order.

  * When accessing file information, the TEXMF openin_any
    setting is first checked to determine if read access is 
    permitted.

  * Returned values now include some shorthand markup that's
    internally converted when read in by \TeXOSQuery. For
    example "texosquery -n" now returns

    \pdfd \fcln 20161113161156\fpls 00\fcsq 00\fcsq 

    instead of

    D:20161113161156+00'00'

    To restore the original behaviour use --compatible 1

    See the manual for further details.

1.1 (2016-07-14):

 * texosquery.jar:

   - Added --dirname (-e)

   - Multiline results add braces to each line
     (to make it easier to parse the results in TeX).

   - Code refactored.

   - Code now compiled for Java 5 to support users with 
     old versions of the JRE.

 * texosquery.tex:

   - \TeXOSQueryNow and \TeXOSQueryFileDate set the category
     code of D to 12 (to match \pdfcreationdate).

   - new command \TeXOSQueryDirName

   - dry run mode is now by default on unless shell escape=1
     (unrestricted mode)

1.0 (2016-07-08):

 * Initial release
